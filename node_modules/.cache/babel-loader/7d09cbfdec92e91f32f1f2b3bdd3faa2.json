{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041D\\u0430\\u0441\\u0442\\u044F\\\\work\\\\javascript\\\\UDEMY REACT\\\\01-starting-setup\\\\src\\\\components\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem.js\";\nimport Card from \"./Card.js\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(item => {\n    return item.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No expenses found \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(item => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: item.title,\n      amount: item.amount,\n      date: item.date\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["D:/Настя/work/javascript/UDEMY REACT/01-starting-setup/src/components/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","React","useState","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","item","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMK,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAU;AACpD,WAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCV,YAA9C;AACD,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,IAAD,iBACrC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,IAAI,CAACO,KAFd;AAGE,MAAA,MAAM,EAAEP,IAAI,CAACQ,MAHf;AAIE,MAAA,IAAI,EAAER,IAAI,CAACC;AAJb,OACOD,IAAI,CAACS,EADZ;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEhB,YADZ;AAEE,QAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGS,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnCQb,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem.js\";\r\nimport Card from \"./Card.js\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((item) => {\r\n    return item.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expensesContent = <p> No expenses found </p>;\r\n\r\n  if (filteredExpenses.length > 0) {\r\n    expensesContent = filteredExpenses.map((item) => (\r\n      <ExpenseItem\r\n        key={item.id}\r\n        title={item.title}\r\n        amount={item.amount}\r\n        date={item.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        {expensesContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}