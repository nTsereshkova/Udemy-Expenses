{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041D\\u0430\\u0441\\u0442\\u044F\\\\work\\\\javascript\\\\UDEMY REACT\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  // создаем индивидуальные state \n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // но можно и общий сделать \n  // там тоже 2 подхода, лушче идти через prevState и спред оператор \n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle:'',\n  //     enteredAmount:'',\n  //     enteredDate: ''\n  // })\n\n  function titleChangeHadler(event) {\n    setEnteredTitle(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: event.target.value,\n    // })\n    // этот подход с одним стейтом не корректен, поэтому изменияем его\n    // setUserInput((prevState)=> {\n    //     return { ...prevState,\n    //         enteredTitle: event.target.value\n    //     }\n    // })\n  }\n\n  function amountChangeHandler(event) {\n    setEnteredAmount(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value,\n    // })\n    // setUserInput((prevState)=> {\n    //     return { ...prevState,\n    //         enteredAmount: event.target.value\n    //     }\n    // })\n  }\n\n  function dateChangeHandler(event) {\n    // setEnteredDate(event.target.value)\n    // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value,\n    // })\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredDate: event.target.value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHadler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"yKePAnzQs5R9g/v6xw/Pd4l+5q8=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/Настя/work/javascript/UDEMY REACT/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHadler","event","target","value","amountChangeHandler","dateChangeHandler","setUserInput","prevState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,mBAAP;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACvB;AACE,QAAK,CAACC,YAAD,EAAcC,eAAd,IAAiCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAJqB,CAKvB;AACA;AAGA;AACA;AACA;AACA;AACA;;AAGA,WAASQ,iBAAT,CAA2BC,KAA3B,EAAkC;AAC7BN,IAAAA,eAAe,CAAEM,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAf,CAD6B,CAE9B;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACH;;AAED,WAAUC,mBAAV,CAA+BH,KAA/B,EAAsC;AACjCJ,IAAAA,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB,CADiC,CAElC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH;;AAGD,WAASE,iBAAT,CAA4BJ,KAA5B,EAAmC;AACnC;AACA;AACA;AACA;AACA;AACAK,IAAAA,YAAY,CAAEC,SAAD,IAAc;AACvB,aAAO,EAAE,GAAGA,SAAL;AACHT,QAAAA,WAAW,EAAEG,KAAK,CAACC,MAAN,CAAaC;AADvB,OAAP;AAGH,KAJW,CAAZ;AAKC;;AACD,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAGH;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKK;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,MAAzB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,QAAQ,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cALL,eASK;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAC,YAAvB;AAAqC,UAAA,GAAG,EAAC,YAAzC;AAAsD,UAAA,QAAQ,EAAEC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cATL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBC;;GAhFQZ,W;;KAAAA,W;AAkFT,eAAeA,WAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./ExpenseForm.css\"\r\n\r\n\r\nfunction ExpenseForm() {\r\n// создаем индивидуальные state \r\n  const[enteredTitle,setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n// но можно и общий сделать \r\n// там тоже 2 подхода, лушче идти через prevState и спред оператор \r\n\r\n\r\n// const [userInput, setUserInput] = useState({\r\n//     enteredTitle:'',\r\n//     enteredAmount:'',\r\n//     enteredDate: ''\r\n// })\r\n\r\n\r\nfunction titleChangeHadler(event) {\r\n     setEnteredTitle (event.target.value);\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredTitle: event.target.value,\r\n    // })\r\n    // этот подход с одним стейтом не корректен, поэтому изменияем его\r\n\r\n\r\n    // setUserInput((prevState)=> {\r\n    //     return { ...prevState,\r\n    //         enteredTitle: event.target.value\r\n    //     }\r\n    // })\r\n}\r\n\r\nfunction  amountChangeHandler (event) {\r\n     setEnteredAmount(event.target.value)\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredAmount: event.target.value,\r\n    // })\r\n\r\n    // setUserInput((prevState)=> {\r\n    //     return { ...prevState,\r\n    //         enteredAmount: event.target.value\r\n    //     }\r\n    // })\r\n}\r\n\r\n\r\nfunction dateChangeHandler (event) {\r\n// setEnteredDate(event.target.value)\r\n// setUserInput({\r\n//     ...userInput,\r\n//     enteredDate: event.target.value,\r\n// })\r\nsetUserInput((prevState)=> {\r\n    return { ...prevState,\r\n        enteredDate: event.target.value\r\n    }\r\n})\r\n}\r\nreturn (\r\n    <form>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type='text' onChange ={titleChangeHadler} />\r\n             </div>\r\n             <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type='number' min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n             </div>\r\n             <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type='date' min=\"2019-01-01\"  max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n             </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"submit\">Add expense</button>\r\n        </div>\r\n    </form>\r\n)\r\n}\r\n\r\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}